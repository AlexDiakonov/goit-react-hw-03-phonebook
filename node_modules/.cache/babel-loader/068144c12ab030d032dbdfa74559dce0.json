{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/reactStudy/hw3/goit-react-hw-03-phonebook/goit-react-hw-03-phonebook/src/App.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './Components/ContactForm.jsx';\nimport Filter from './Components/Filter';\nimport ContactItem from './Components/ContactItem.jsx';\nimport style from './ModuleStyles/PhoneBook.module.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n\n    this.handleFilter = e => {\n      this.setState({\n        filter: e.target.value\n      });\n    };\n\n    this.showFilteredContacts = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    };\n\n    this.addContact = (name, number) => {\n      if (name.length > 2) {\n        let contactCard = {\n          name: name,\n          number: number,\n          id: uuidv4()\n        };\n        this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, contactCard]\n          };\n        });\n      } else {\n        alert('First you have enter the name');\n      }\n    };\n\n    this.deleteContact = id => {\n      this.setState(prevState => {\n        return {\n          contacts: prevState.contacts.filter(contact => contact.id !== id)\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    const getContactFromStorage = localStorage.getItem('contact');\n\n    if (getContactFromStorage) {\n      this.setState({\n        contacts: JSON.parse(getContactFromStorage)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contact', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: style.phonebook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Phonebook\"), /*#__PURE__*/React.createElement(ContactForm, {\n      contacts: contacts,\n      addContact: this.addContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Contacts\"), contacts.length > 1 && /*#__PURE__*/React.createElement(Filter, {\n      handleFilter: this.handleFilter,\n      filter: filter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, this.showFilteredContacts().map(({\n      name,\n      id,\n      number\n    }) => /*#__PURE__*/React.createElement(ContactItem, {\n      key: id,\n      onRemove: this.deleteContact,\n      name: name,\n      id: id,\n      number: number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/macos/Desktop/reactStudy/hw3/goit-react-hw-03-phonebook/goit-react-hw-03-phonebook/src/App.js"],"names":["React","Component","v4","uuidv4","ContactForm","Filter","ContactItem","style","App","state","contacts","filter","handleFilter","e","setState","target","value","showFilteredContacts","contact","name","toLowerCase","includes","addContact","number","length","contactCard","id","prevState","alert","deleteContact","componentDidMount","getContactFromStorage","localStorage","getItem","JSON","parse","componentDidUpdate","prevProp","setItem","stringify","render","phonebook","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AACA,eAAe,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCQ,KADyC,GACjC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,MAAM,EAAE;AAFF,KADiC;;AAAA,SAgBzCC,YAhByC,GAgBzBC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEE,CAAC,CAACE,MAAF,CAASC;AAAnB,OAAd;AACD,KAlBwC;;AAAA,SAoBzCC,oBApByC,GAoBlB,MAAM;AAC3B,YAAM;AAAEN,QAAAA,MAAF;AAAUD,QAAAA;AAAV,UAAuB,KAAKD,KAAlC;AAEA,aAAOC,QAAQ,CAACC,MAAT,CAAiBO,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCV,MAAM,CAACS,WAAP,EAApC,CAA7B,CAAP;AACD,KAxBwC;;AAAA,SA0BzCE,UA1ByC,GA0B5B,CAACH,IAAD,EAAOI,MAAP,KAAkB;AAC7B,UAAIJ,IAAI,CAACK,MAAL,GAAc,CAAlB,EAAqB;AACnB,YAAIC,WAAW,GAAG;AAAEN,UAAAA,IAAI,EAAEA,IAAR;AAAcI,UAAAA,MAAM,EAAEA,MAAtB;AAA8BG,UAAAA,EAAE,EAAEvB,MAAM;AAAxC,SAAlB;AACA,aAAKW,QAAL,CAAea,SAAD,IAAe;AAC3B,iBAAO;AAAEjB,YAAAA,QAAQ,EAAE,CAAC,GAAGiB,SAAS,CAACjB,QAAd,EAAwBe,WAAxB;AAAZ,WAAP;AACD,SAFD;AAGD,OALD,MAKO;AACLG,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACD;AACF,KAnCwC;;AAAA,SAqCzCC,aArCyC,GAqCxBH,EAAD,IAAQ;AACtB,WAAKZ,QAAL,CAAea,SAAD,IAAe;AAC3B,eAAO;AACLjB,UAAAA,QAAQ,EAAEiB,SAAS,CAACjB,QAAV,CAAmBC,MAAnB,CAA2BO,OAAD,IAAaA,OAAO,CAACQ,EAAR,KAAeA,EAAtD;AADL,SAAP;AAGD,OAJD;AAKD,KA3CwC;AAAA;;AAKzCI,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,qBAAqB,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAA9B;;AACA,QAAIF,qBAAJ,EAA2B;AACzB,WAAKjB,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAEwB,IAAI,CAACC,KAAL,CAAWJ,qBAAX;AAAZ,OAAd;AACD;AACF;;AACDK,EAAAA,kBAAkB,CAACC,QAAD,EAAWV,SAAX,EAAsB;AACtC,QAAIA,SAAS,CAACjB,QAAV,KAAuB,KAAKD,KAAL,CAAWC,QAAtC,EAAgD;AAC9CsB,MAAAA,YAAY,CAACM,OAAb,CAAqB,SAArB,EAAgCJ,IAAI,CAACK,SAAL,CAAe,KAAK9B,KAAL,CAAWC,QAA1B,CAAhC;AACD;AACF;;AA8BD8B,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE9B,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuB,KAAKF,KAAlC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAEF,KAAK,CAACkC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE/B,QAAvB;AAAiC,MAAA,UAAU,EAAE,KAAKY,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIGZ,QAAQ,CAACc,MAAT,GAAkB,CAAlB,iBAAuB,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,KAAKZ,YAA3B;AAAyC,MAAA,MAAM,EAAED,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ1B,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKM,oBAAL,GAA4ByB,GAA5B,CAAgC,CAAC;AAAEvB,MAAAA,IAAF;AAAQO,MAAAA,EAAR;AAAYH,MAAAA;AAAZ,KAAD,kBAC/B,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEG,EADP;AAEE,MAAA,QAAQ,EAAE,KAAKG,aAFjB;AAGE,MAAA,IAAI,EAAEV,IAHR;AAIE,MAAA,EAAE,EAAEO,EAJN;AAKE,MAAA,MAAM,EAAEH,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CALF,CADF;AAmBD;;AAnEwC","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './Components/ContactForm.jsx';\nimport Filter from './Components/Filter';\nimport ContactItem from './Components/ContactItem.jsx';\nimport style from './ModuleStyles/PhoneBook.module.css';\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  componentDidMount() {\n    const getContactFromStorage = localStorage.getItem('contact');\n    if (getContactFromStorage) {\n      this.setState({ contacts: JSON.parse(getContactFromStorage) });\n    }\n  }\n  componentDidUpdate(prevProp, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contact', JSON.stringify(this.state.contacts));\n    }\n  }\n  handleFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  showFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  addContact = (name, number) => {\n    if (name.length > 2) {\n      let contactCard = { name: name, number: number, id: uuidv4() };\n      this.setState((prevState) => {\n        return { contacts: [...prevState.contacts, contactCard] };\n      });\n    } else {\n      alert('First you have enter the name');\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((contact) => contact.id !== id),\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div className={style.phonebook}>\n        <h2>Phonebook</h2>\n        <ContactForm contacts={contacts} addContact={this.addContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && <Filter handleFilter={this.handleFilter} filter={filter} />}\n        <ul>\n          {this.showFilteredContacts().map(({ name, id, number }) => (\n            <ContactItem\n              key={id}\n              onRemove={this.deleteContact}\n              name={name}\n              id={id}\n              number={number}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}